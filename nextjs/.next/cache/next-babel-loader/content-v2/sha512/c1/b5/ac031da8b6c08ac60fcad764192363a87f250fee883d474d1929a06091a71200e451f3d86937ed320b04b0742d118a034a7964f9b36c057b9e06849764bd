{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport Search from './Search.jsx';\nimport RepoList from './RepoList.jsx';\nimport hostServer from '../utils/hostServer';\n\nvar App = function App(_ref) {\n  var data = _ref.data;\n\n  var _useState = useState(data),\n      repos = _useState[0],\n      setRepos = _useState[1];\n\n  var updateReposList = function updateReposList() {\n    axios.get('/repos').then(function (data) {\n      setRepos(data);\n    })[\"catch\"](function (err) {\n      return console.error(err);\n    });\n  };\n\n  var search = function search(term) {\n    console.log(\"\".concat(term, \" was searched\"));\n    axios.post('/repos', {\n      username: term\n    }).then(function () {\n      return updateReposList();\n    })[\"catch\"](function (err) {\n      return console.error(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    children: [/*#__PURE__*/_jsx(\"h1\", {\n      children: \"Github Fetcher\"\n    }), /*#__PURE__*/_jsx(RepoList, {\n      repos: repos\n    }), /*#__PURE__*/_jsx(Search, {\n      onSearch: search\n    })]\n  });\n};\n\nexport default App;","map":null,"metadata":{},"sourceType":"module"}