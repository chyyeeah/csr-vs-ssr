{"ast":null,"code":"import _regeneratorRuntime from \"/Users/wilsoncheah/Documents/hackreactor/sei/ssr-presentation/nextjs/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/wilsoncheah/Documents/hackreactor/sei/ssr-presentation/nextjs/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/wilsoncheah/Documents/hackreactor/sei/ssr-presentation/nextjs/src/components/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom'; // import axios from 'axios';\n\nimport Search from './Search.jsx';\nimport RepoList from './RepoList.jsx';\nimport hostServer from '../utils/hostServer';\nexport default function App(props) {\n  _s();\n\n  var _useState = useState(props.data),\n      repos = _useState[0],\n      setRepos = _useState[1];\n\n  useEffect(function () {\n    console.log(repos);\n\n    if (repos.length < 1) {\n      axios.get('http://localhost:3001/repos').then(function (res) {\n        console.log(res.data);\n        setRepos(res.data);\n      })[\"catch\"](function (err) {\n        return console.error(err);\n      });\n    }\n  }, []);\n\n  var updateReposList = function updateReposList() {\n    axios.get('/repos').then(function (data) {\n      setRepos(data);\n    })[\"catch\"](function (err) {\n      return console.error(err);\n    });\n  };\n\n  var search = function search(term) {\n    console.log(\"\".concat(term, \" was searched\"));\n    axios.post('/repos', {\n      username: term\n    }).then(function () {\n      return updateReposList();\n    })[\"catch\"](function (err) {\n      return console.error(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Github Fetcher\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RepoList, {\n      repos: repos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Search, {\n      onSearch: search\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"JFUmx8kV+0qCrCbUcWM+MS3EIak=\");\n\n_c = App;\n;\n/*\nEssentially, getStaticProps allows you to tell Next.js: “Hey, this page has some data dependencies — so when you pre-render this page at build time, make sure to resolve them first!”\n*/\n\nexport function getStaticProps() {\n  return _getStaticProps.apply(this, arguments);\n}\n\nfunction _getStaticProps() {\n  _getStaticProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var res, json;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch('http://localhost:3001/repos');\n\n          case 2:\n            res = _context.sent;\n            _context.next = 5;\n            return res.json();\n\n          case 5:\n            json = _context.sent;\n            console.log(json);\n            return _context.abrupt(\"return\", {\n              props: {\n                data: json\n              }\n            });\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getStaticProps.apply(this, arguments);\n}\n\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/wilsoncheah/Documents/hackreactor/sei/ssr-presentation/nextjs/src/components/App.jsx"],"names":["React","useState","useEffect","ReactDOM","Search","RepoList","hostServer","App","props","data","repos","setRepos","console","log","length","axios","get","then","res","err","error","updateReposList","search","term","post","username","getStaticProps","fetch","json"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AAEA,eAAe,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA;;AAAA,kBACLP,QAAQ,CAACO,KAAK,CAACC,IAAP,CADH;AAAA,MACzBC,KADyB;AAAA,MAClBC,QADkB;;AAGjCT,EAAAA,SAAS,CAAC,YAAM;AACdU,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;;AACA,QAAIA,KAAK,CAACI,MAAN,GAAe,CAAnB,EAAsB;AACpBC,MAAAA,KAAK,CAACC,GAAN,CAAU,6BAAV,EACCC,IADD,CACM,UAAAC,GAAG,EAAI;AACXN,QAAAA,OAAO,CAACC,GAAR,CAAYK,GAAG,CAACT,IAAhB;AACAE,QAAAA,QAAQ,CAACO,GAAG,CAACT,IAAL,CAAR;AACD,OAJD,WAKO,UAAAU,GAAG;AAAA,eAAIP,OAAO,CAACQ,KAAR,CAAcD,GAAd,CAAJ;AAAA,OALV;AAMD;AACF,GAVQ,EAUN,EAVM,CAAT;;AAYA,MAAME,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5BN,IAAAA,KAAK,CAACC,GAAN,CAAU,QAAV,EACGC,IADH,CACQ,UAAAR,IAAI,EAAI;AACZE,MAAAA,QAAQ,CAACF,IAAD,CAAR;AACD,KAHH,WAIS,UAAAU,GAAG;AAAA,aAAIP,OAAO,CAACQ,KAAR,CAAcD,GAAd,CAAJ;AAAA,KAJZ;AAKD,GAND;;AAQA,MAAMG,MAAM,GAAG,SAATA,MAAS,CAAAC,IAAI,EAAI;AACrBX,IAAAA,OAAO,CAACC,GAAR,WAAeU,IAAf;AACAR,IAAAA,KAAK,CAACS,IAAN,CAAW,QAAX,EAAqB;AAAEC,MAAAA,QAAQ,EAAEF;AAAZ,KAArB,EACGN,IADH,CACQ;AAAA,aAAMI,eAAe,EAArB;AAAA,KADR,WAES,UAAAF,GAAG;AAAA,aAAIP,OAAO,CAACQ,KAAR,CAAcD,GAAd,CAAJ;AAAA,KAFZ;AAGD,GALD;;AAOA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAET;AAAjB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAEY;AAAlB;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GArCuBf,G;;KAAAA,G;AAqCvB;AAED;AACA;AACA;;AACA,gBAAsBmB,cAAtB;AAAA;AAAA;;;6EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACaC,KAAK,CAAC,6BAAD,CADlB;;AAAA;AACCT,YAAAA,GADD;AAAA;AAAA,mBAEcA,GAAG,CAACU,IAAJ,EAFd;;AAAA;AAECA,YAAAA,IAFD;AAILhB,YAAAA,OAAO,CAACC,GAAR,CAAYe,IAAZ;AAJK,6CAME;AACLpB,cAAAA,KAAK,EAAE;AACLC,gBAAAA,IAAI,EAAEmB;AADD;AADF,aANF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAWN","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\n// import axios from 'axios';\nimport Search from './Search.jsx';\nimport RepoList from './RepoList.jsx';\nimport hostServer from '../utils/hostServer';\n\nexport default function App(props) {\n  const [ repos, setRepos ] = useState(props.data);\n\n  useEffect(() => {\n    console.log(repos);\n    if (repos.length < 1) {\n      axios.get('http://localhost:3001/repos')\n      .then(res => {\n        console.log(res.data);\n        setRepos(res.data);\n      })\n      .catch(err => console.error(err));\n    }\n  }, []);\n\n  const updateReposList = () => {\n    axios.get('/repos')\n      .then(data => {\n        setRepos(data);\n      })\n      .catch(err => console.error(err));\n  };\n\n  const search = term => {\n    console.log(`${term} was searched`);\n    axios.post('/repos', { username: term })\n      .then(() => updateReposList())\n      .catch(err => console.error(err));\n  }\n\n  return (\n    <div>\n      <h1>Github Fetcher</h1>\n      <RepoList repos={repos}/>\n      <Search onSearch={search}/>\n    </div>\n  );\n};\n\n/*\nEssentially, getStaticProps allows you to tell Next.js: “Hey, this page has some data dependencies — so when you pre-render this page at build time, make sure to resolve them first!”\n*/\nexport async function getStaticProps() {\n  const res = await fetch('http://localhost:3001/repos');\n  const json = await res.json();\n\n  console.log(json);\n\n  return {\n    props: {\n      data: json\n    }\n  };\n};"]},"metadata":{},"sourceType":"module"}