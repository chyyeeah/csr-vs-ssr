{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/wilsoncheah/Documents/hackreactor/sei/ssr-presentation/nextjs/src/components/App.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom'; // import axios from 'axios';\n\nimport Search from './Search.jsx';\nimport RepoList from './RepoList.jsx';\nimport hostServer from '../utils/hostServer';\nexport default function App(props) {\n  const {\n    0: repos,\n    1: setRepos\n  } = useState(props.data);\n  useEffect(() => {\n    console.log(repos);\n\n    if (repos.length < 1) {\n      axios.get('http://localhost:3001/repos').then(res => {\n        console.log(res.data);\n        setRepos(res.data);\n      }).catch(err => console.error(err));\n    }\n  }, []);\n\n  const updateReposList = () => {\n    axios.get('/repos').then(data => {\n      setRepos(data);\n    }).catch(err => console.error(err));\n  };\n\n  const search = term => {\n    console.log(`${term} was searched`);\n    axios.post('/repos', {\n      username: term\n    }).then(() => updateReposList()).catch(err => console.error(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Github Fetcher\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RepoList, {\n      repos: repos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Search, {\n      onSearch: search\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n;\n/*\nEssentially, getStaticProps allows you to tell Next.js: “Hey, this page has some data dependencies — so when you pre-render this page at build time, make sure to resolve them first!”\n*/\n\nexport async function getStaticProps() {\n  const res = await fetch('http://localhost:3001/repos');\n  const json = await res.json();\n  console.log(json);\n  return {\n    props: {\n      data: json\n    }\n  };\n}\n;","map":{"version":3,"sources":["/Users/wilsoncheah/Documents/hackreactor/sei/ssr-presentation/nextjs/src/components/App.jsx"],"names":["React","useState","useEffect","ReactDOM","Search","RepoList","hostServer","App","props","repos","setRepos","data","console","log","length","axios","get","then","res","catch","err","error","updateReposList","search","term","post","username","getStaticProps","fetch","json"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AAEA,eAAe,SAASC,GAAT,CAAaC,KAAb,EAAoB;AACjC,QAAM;AAAA,OAAEC,KAAF;AAAA,OAASC;AAAT,MAAsBT,QAAQ,CAACO,KAAK,CAACG,IAAP,CAApC;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;;AACA,QAAIA,KAAK,CAACK,MAAN,GAAe,CAAnB,EAAsB;AACpBC,MAAAA,KAAK,CAACC,GAAN,CAAU,6BAAV,EACCC,IADD,CACMC,GAAG,IAAI;AACXN,QAAAA,OAAO,CAACC,GAAR,CAAYK,GAAG,CAACP,IAAhB;AACAD,QAAAA,QAAQ,CAACQ,GAAG,CAACP,IAAL,CAAR;AACD,OAJD,EAKCQ,KALD,CAKOC,GAAG,IAAIR,OAAO,CAACS,KAAR,CAAcD,GAAd,CALd;AAMD;AACF,GAVQ,EAUN,EAVM,CAAT;;AAYA,QAAME,eAAe,GAAG,MAAM;AAC5BP,IAAAA,KAAK,CAACC,GAAN,CAAU,QAAV,EACGC,IADH,CACQN,IAAI,IAAI;AACZD,MAAAA,QAAQ,CAACC,IAAD,CAAR;AACD,KAHH,EAIGQ,KAJH,CAISC,GAAG,IAAIR,OAAO,CAACS,KAAR,CAAcD,GAAd,CAJhB;AAKD,GAND;;AAQA,QAAMG,MAAM,GAAGC,IAAI,IAAI;AACrBZ,IAAAA,OAAO,CAACC,GAAR,CAAa,GAAEW,IAAK,eAApB;AACAT,IAAAA,KAAK,CAACU,IAAN,CAAW,QAAX,EAAqB;AAAEC,MAAAA,QAAQ,EAAEF;AAAZ,KAArB,EACGP,IADH,CACQ,MAAMK,eAAe,EAD7B,EAEGH,KAFH,CAESC,GAAG,IAAIR,OAAO,CAACS,KAAR,CAAcD,GAAd,CAFhB;AAGD,GALD;;AAOA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEX;AAAjB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAEc;AAAlB;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;AAAA;AAED;AACA;AACA;;AACA,OAAO,eAAeI,cAAf,GAAgC;AACrC,QAAMT,GAAG,GAAG,MAAMU,KAAK,CAAC,6BAAD,CAAvB;AACA,QAAMC,IAAI,GAAG,MAAMX,GAAG,CAACW,IAAJ,EAAnB;AAEAjB,EAAAA,OAAO,CAACC,GAAR,CAAYgB,IAAZ;AAEA,SAAO;AACLrB,IAAAA,KAAK,EAAE;AACLG,MAAAA,IAAI,EAAEkB;AADD;AADF,GAAP;AAKD;AAAA","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\n// import axios from 'axios';\nimport Search from './Search.jsx';\nimport RepoList from './RepoList.jsx';\nimport hostServer from '../utils/hostServer';\n\nexport default function App(props) {\n  const [ repos, setRepos ] = useState(props.data);\n\n  useEffect(() => {\n    console.log(repos);\n    if (repos.length < 1) {\n      axios.get('http://localhost:3001/repos')\n      .then(res => {\n        console.log(res.data);\n        setRepos(res.data);\n      })\n      .catch(err => console.error(err));\n    }\n  }, []);\n\n  const updateReposList = () => {\n    axios.get('/repos')\n      .then(data => {\n        setRepos(data);\n      })\n      .catch(err => console.error(err));\n  };\n\n  const search = term => {\n    console.log(`${term} was searched`);\n    axios.post('/repos', { username: term })\n      .then(() => updateReposList())\n      .catch(err => console.error(err));\n  }\n\n  return (\n    <div>\n      <h1>Github Fetcher</h1>\n      <RepoList repos={repos}/>\n      <Search onSearch={search}/>\n    </div>\n  );\n};\n\n/*\nEssentially, getStaticProps allows you to tell Next.js: “Hey, this page has some data dependencies — so when you pre-render this page at build time, make sure to resolve them first!”\n*/\nexport async function getStaticProps() {\n  const res = await fetch('http://localhost:3001/repos');\n  const json = await res.json();\n\n  console.log(json);\n\n  return {\n    props: {\n      data: json\n    }\n  };\n};"]},"metadata":{},"sourceType":"module"}