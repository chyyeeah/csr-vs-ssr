{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom'; // import axios from 'axios';\n\nimport Search from './Search.jsx';\nimport RepoList from './RepoList.jsx';\nimport hostServer from '../utils/hostServer';\nexport default function App(props) {\n  const {\n    0: repos,\n    1: setRepos\n  } = useState(props.data); // useEffect(() => {\n  //   console.log(repos);\n  //   if (repos.length < 1) {\n  //     axios.get('http://localhost:3001/repos')\n  //     .then(res => {\n  //       console.log(res.data);\n  //       setRepos(res.data);\n  //     })\n  //     .catch(err => console.error(err));\n  //   }\n  // }, []);\n\n  const updateReposList = () => {\n    axios.get('/repos').then(data => {\n      setRepos(data);\n    }).catch(err => console.error(err));\n  };\n\n  const search = term => {\n    console.log(`${term} was searched`);\n    axios.post('/repos', {\n      username: term\n    }).then(() => updateReposList()).catch(err => console.error(err));\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    children: [/*#__PURE__*/_jsx(\"h1\", {\n      children: \"Github Fetcher\"\n    }), /*#__PURE__*/_jsx(RepoList, {\n      repos: repos\n    }), /*#__PURE__*/_jsx(Search, {\n      onSearch: search\n    })]\n  });\n}\n;\n/*\nEssentially, getStaticProps allows you to tell Next.js: “Hey, this page has some data dependencies — so when you pre-render this page at build time, make sure to resolve them first!”\n*/\n\nexport async function getStaticProps() {\n  const res = await fetch('http://localhost:3001/repos');\n  const json = await res.json();\n  console.log(json);\n  return {\n    props: {\n      data: json\n    }\n  };\n}\n;","map":null,"metadata":{},"sourceType":"module"}