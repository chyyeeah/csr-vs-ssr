{"ast":null,"code":"import _regeneratorRuntime from \"/Users/wilsoncheah/Documents/hackreactor/sei/ssr-presentation/nextjs/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/wilsoncheah/Documents/hackreactor/sei/ssr-presentation/nextjs/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/wilsoncheah/Documents/hackreactor/sei/ssr-presentation/nextjs/src/components/App.jsx\",\n    _this = this;\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport Search from './Search.jsx';\nimport RepoList from './RepoList.jsx';\nimport hostServer from '../utils/hostServer';\n\nvar App = function App(props) {\n  // const [ repos, setRepos ] = useState(props.data);\n  // useEffect(() => {\n  //   console.log(repos);\n  //   if (repos.length < 1) {\n  //     axios.get('http://localhost:3001/repos')\n  //     .then(res => {\n  //       console.log(res.data);\n  //       setRepos(res.data);\n  //     })\n  //     .catch(err => console.error(err));\n  //   }\n  // }, []);\n  var updateReposList = function updateReposList() {\n    axios.get('/repos').then(function (data) {\n      setRepos(data);\n    })[\"catch\"](function (err) {\n      return console.error(err);\n    });\n  };\n\n  var search = function search(term) {\n    console.log(\"\".concat(term, \" was searched\"));\n    axios.post('/repos', {\n      username: term\n    }).then(function () {\n      return updateReposList();\n    })[\"catch\"](function (err) {\n      return console.error(err);\n    });\n  };\n\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Github Fetcher\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(RepoList, {\n      repos: props.data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Search, {\n      onSearch: search\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, _this);\n};\n/*\nEssentially, getStaticProps allows you to tell Next.js: “Hey, this page has some data dependencies — so when you pre-render this page at build time, make sure to resolve them first!”\n*/\n\n\n_c = App;\nexport function getStaticProps() {\n  return _getStaticProps.apply(this, arguments);\n}\n\nfunction _getStaticProps() {\n  _getStaticProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var res, json;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return axios.get('http://localhost:3001/repos');\n\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.json();\n\n          case 6:\n            json = _context.sent;\n            console.log(res);\n            return _context.abrupt(\"return\", {\n              props: {\n                data: json\n              }\n            });\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](0);\n            return _context.abrupt(\"return\", {\n              props: {\n                data: []\n              }\n            });\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 11]]);\n  }));\n  return _getStaticProps.apply(this, arguments);\n}\n\n;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/wilsoncheah/Documents/hackreactor/sei/ssr-presentation/nextjs/src/components/App.jsx"],"names":["React","useState","useEffect","ReactDOM","axios","Search","RepoList","hostServer","App","props","updateReposList","get","then","data","setRepos","err","console","error","search","term","log","post","username","getStaticProps","res","json"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAACC,KAAD,EAAW;AACrB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5BN,IAAAA,KAAK,CAACO,GAAN,CAAU,QAAV,EACGC,IADH,CACQ,UAAAC,IAAI,EAAI;AACZC,MAAAA,QAAQ,CAACD,IAAD,CAAR;AACD,KAHH,WAIS,UAAAE,GAAG;AAAA,aAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,KAJZ;AAKD,GAND;;AAQA,MAAMG,MAAM,GAAG,SAATA,MAAS,CAAAC,IAAI,EAAI;AACrBH,IAAAA,OAAO,CAACI,GAAR,WAAeD,IAAf;AACAf,IAAAA,KAAK,CAACiB,IAAN,CAAW,QAAX,EAAqB;AAAEC,MAAAA,QAAQ,EAAEH;AAAZ,KAArB,EACGP,IADH,CACQ;AAAA,aAAMF,eAAe,EAArB;AAAA,KADR,WAES,UAAAK,GAAG;AAAA,aAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,KAFZ;AAGD,GALD;;AAOAC,EAAAA,OAAO,CAACI,GAAR,CAAYX,KAAZ;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAGE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEA,KAAK,CAACI;AAAvB;AAAA;AAAA;AAAA;AAAA,aAHF,eAIE,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAEK;AAAlB;AAAA;AAAA;AAAA;AAAA,aAJF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAQD,CAxCD;AA0CA;AACA;AACA;;;KA5CMV,G;AA6CN,gBAAsBe,cAAtB;AAAA;AAAA;;;6EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEenB,KAAK,CAACO,GAAN,CAAU,6BAAV,CAFf;;AAAA;AAEGa,YAAAA,GAFH;AAAA;AAAA,mBAGgBA,GAAG,CAACC,IAAJ,EAHhB;;AAAA;AAGGA,YAAAA,IAHH;AAKHT,YAAAA,OAAO,CAACI,GAAR,CAAYI,GAAZ;AALG,6CAOI;AACLf,cAAAA,KAAK,EAAE;AACLI,gBAAAA,IAAI,EAAEY;AADD;AADF,aAPJ;;AAAA;AAAA;AAAA;AAAA,6CAaI;AACLhB,cAAAA,KAAK,EAAE;AACLI,gBAAAA,IAAI,EAAE;AADD;AADF,aAbJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAmBN;AAED,eAAeL,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport Search from './Search.jsx';\nimport RepoList from './RepoList.jsx';\nimport hostServer from '../utils/hostServer';\n\nconst App = (props) => {\n  // const [ repos, setRepos ] = useState(props.data);\n\n  // useEffect(() => {\n  //   console.log(repos);\n  //   if (repos.length < 1) {\n  //     axios.get('http://localhost:3001/repos')\n  //     .then(res => {\n  //       console.log(res.data);\n  //       setRepos(res.data);\n  //     })\n  //     .catch(err => console.error(err));\n  //   }\n  // }, []);\n\n  const updateReposList = () => {\n    axios.get('/repos')\n      .then(data => {\n        setRepos(data);\n      })\n      .catch(err => console.error(err));\n  };\n\n  const search = term => {\n    console.log(`${term} was searched`);\n    axios.post('/repos', { username: term })\n      .then(() => updateReposList())\n      .catch(err => console.error(err));\n  }\n\n  console.log(props);\n\n  return (\n    <div>\n      <h1>Github Fetcher</h1>\n      {/* <RepoList repos={repos}/> */}\n      <RepoList repos={props.data}/>\n      <Search onSearch={search}/>\n    </div>\n  );\n};\n\n/*\nEssentially, getStaticProps allows you to tell Next.js: “Hey, this page has some data dependencies — so when you pre-render this page at build time, make sure to resolve them first!”\n*/\nexport async function getStaticProps() {\n  try {\n    const res = await axios.get('http://localhost:3001/repos');\n    const json = await res.json();\n\n    console.log(res);\n\n    return {\n      props: {\n        data: json\n      }\n    };\n  } catch (err) {\n    return {\n      props: {\n        data: []\n      }\n    };\n  }\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}